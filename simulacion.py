import calculadoraComplejos as calculadora


l = [[(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
      [(1/(2**0.5),0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
      [(1/(2**0.5),0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
      [(0,0),((-1/(6**0.5)),(1/(6**0.5))),(0,0),(1,0),(0,0),(0,0),(0,0),(0,0)],
      [(0,0),((-1/(6**0.5)),(-1/(6**0.5))),(0,0),(0,0),(1,0),(0,0),(0,0),(0,0)],
      [(0,0),((1/(6**0.5),-1/(6**0.5))),((-1/(6**0.5),1/(6**0.5))),(0,0),(0,0),(1,0),(0,0),(0,0)],
      [(0,0),(0,0),(-1/(6**0.5),-1/(6**0.5)),(0,0),(0,0),(0,0),(1,0),(0,0)],
      [(0,0),(0,0),(1/(6**0.5),-1/(6**0.5)),(0,0),(0,0),(0,0),(1,0),(0,0)]]





e = [[(1,0)],[(0,0)],[(0,0)],[(0,0)],[(0,0)],[(0,0)]]
n = 2
def main():
   simulacion(l,e,n)

def simulacion(l,e,n):
   for i in range(n):
      total = calculadora.multi_matrices(l,e)
   print(total)
main()

